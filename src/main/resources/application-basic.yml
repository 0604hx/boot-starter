server:
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024
  servlet:
    session:
      cookie:
        max-age: 0
        secure: true
  undertow:
    # 工作者I/O线程，默认为 CPU 个数
    io-threads: 1
    # 工作者线程数，默认为 IO-THREADS 的 8 倍
    worker-threads: 2

spring:
  cache:
    caffeine:
      spec: maximumSize=100,expireAfterWrite=2h
  servlet:
    multipart:
      max-file-size: 256MB
      max-request-size: 256MB
  task:
    scheduling:
      pool:
        size: 3
      thread-name-prefix: "nerve-"
  # 配置 404
  mvc:
    throwExceptionIfNoHandlerFound: true
    # 配置访问静态文件的入口前缀
    # Spring boot 将 classpath 下的 static、public、resources、META-INF/resources 以及 ServletContext 根目录（如 webapp 目录）
    # 下的文件视为静态文件，可以直接访问
    # 此处建议的做法是将静态文件（通常是图片、音视频）防止到 resources（与 main/java 同级） 下的 static 目录
    # 如可以通过 http://ip:port/resources/demo.png 访问到 resources/static/demo.png
    static-path-pattern: /resources/**
    # As of Spring Framework 5.3, Spring MVC supports several implementation strategies for matching request paths to Controller handlers.
    # It was previously only supporting the AntPathMatcher strategy, but it now also offers PathPatternParser.
    # Spring Boot now provides a configuration property to choose and opt in the new strategy:
    # 2.6.x 版本后改用 PathPattern （path-pattern-parser），导致无法访问带有中文的静态资源
    pathmatch:
      matching-strategy: "ant-path-matcher"
  web:
    resources:
      # 需要开启默认的静态资源处理器（默认 true），否则无法正常访问静态资源
      addMappings: true

mybatis-plus:
  configuration:
    # 支持驼峰式字段命名
    map-underscore-to-camel-case: false
